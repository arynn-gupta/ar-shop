def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.ar_shop"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.ar:core:1.15.0'
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.15.0'
    implementation 'com.google.ar.sceneform:core:1.15.0'
}
apply plugin : 'com.google.ar.sceneform.plugin'

sceneform.asset(
        'sampledata/aladdin\'s lamp/scene.gltf',
        'default',
        'sampledata/aladdin\'s lamp/scene.sfa',
        'src/main/assets/aladdin\'s lamp'
        )

sceneform.asset(
        'sampledata/couch/scene.gltf',
        'default',
        'sampledata/couch/scene.sfa',
        'src/main/assets/couch'
        )
        
sceneform.asset(
        'sampledata/flower pot/clay_pot_low_01_flower.FBX',
        'default',
        'sampledata/flower pot/clay_pot_low_01_flower.sfa',
        'src/main/assets/flower pot'
        )
        
sceneform.asset(
        'sampledata/flower vase/scene.gltf',
        'default',
        'sampledata/flower vase/scene.sfa',
        'src/main/assets/flower vase'
        )
        
sceneform.asset(
        'sampledata/iphone/scene.gltf',
        'default',
        'sampledata/iphone/scene.sfa',
        'src/main/assets/iphone'
        )
        
sceneform.asset(
        'sampledata/playstation 5/scene.gltf',
        'default',
        'sampledata/playstation 5/scene.sfa',
        'src/main/assets/playstation 5'
        )
        
sceneform.asset(
        'sampledata/sofa/scene.fbx',
        'default',
        'sampledata/sofa/scene.sfa',
        'src/main/assets/sofa'
        )
        
sceneform.asset(
        'sampledata/ufo v1/scene.gltf',
        'default',
        'sampledata/ufo v1/scene.sfa',
        'src/main/assets/ufo v1'
        )
        
sceneform.asset(
        'sampledata/ufo v2/scene.gltf',
        'default',
        'sampledata/ufo v2/scene.sfa',
        'src/main/assets/ufo v2'
        )
        
sceneform.asset(
        'sampledata/xbox series x/scene.gltf',
        'default',
        'sampledata/xbox series x/scene.sfa',
        'src/main/assets/xbox series x'
        )